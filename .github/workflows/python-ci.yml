name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: smiles_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U admin -d smiles_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    env:
      DB_HOST: localhost
      DB_PORT: "5432"
      DB_USER: admin
      DB_PASSWORD: 1234
      DB_NAME: smiles_db
      REDIS_HOST: localhost
      REDIS_PORT: "6379"
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: smiles_db
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Install redis-tools
        run: sudo apt-get install -y redis-tools

      - name: Wait for services
        run: |
          until pg_isready -h localhost -p 5432 -U admin; do
            echo "Waiting for Postgres..."
            sleep 2
          done
          until redis-cli -h localhost -p 6379 ping | grep -q "PONG"; do
            echo "Waiting for Redis..."
            sleep 2
          done

      - name: Run database migrations
        run: |
          alembic upgrade head

      - name: Run pytest
        run: pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install flake8

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
